[32m2022-12-02 17:11:15 -0500[0m - dagster - [34mDEBUG[0m - matriz_data - c61bddfa-7b93-416a-8535-4b7c24b3f726 - 37387 - LOGS_CAPTURED - Started capturing logs in process (pid: 37387).
[32m2022-12-02 17:11:15 -0500[0m - dagster - [34mDEBUG[0m - matriz_data - c61bddfa-7b93-416a-8535-4b7c24b3f726 - 37387 - load_table - STEP_START - Started execution of step "load_table".
[32m2022-12-02 17:11:15 -0500[0m - dagster - [34mERROR[0m - [31mmatriz_data - c61bddfa-7b93-416a-8535-4b7c24b3f726 - 37387 - load_table - STEP_FAILURE - Execution of step "load_table" failed.

dagster._core.errors.DagsterExecutionStepExecutionError: Error occurred while executing op "load_table"::

sqlalchemy.exc.ProgrammingError: (psycopg2.errors.UndefinedColumn) column "Row" of relation "matrizinfo" does not exist
LINE 1: INSERT INTO matrizinfo ("Row", "Col", val) VALUES ('A', 'A',...
                                ^

[SQL: INSERT INTO matrizinfo ("Row", "Col", val) VALUES (%(Row)s, %(Col)s, %(val)s)]
[parameters: ({'Row': 'A', 'Col': 'A', 'val': 0.0}, {'Row': 'A', 'Col': 'B', 'val': 0.0}, {'Row': 'A', 'Col': 'C', 'val': 0.0}, {'Row': 'A', 'Col': 'D', 'val': 0.0}, {'Row': 'A', 'Col': 'E', 'val': 0.0}, {'Row': 'A', 'Col': 'F', 'val': 1.0}, {'Row': 'A', 'Col': 'G', 'val': 0.0}, {'Row': 'A', 'Col': 'H', 'val': 0.0}  ... displaying 10 of 883 total bound parameter sets ...  {'Row': 'AX', 'Col': 'AW', 'val': 0.0}, {'Row': 'AY', 'Col': 'AX', 'val': 0.0})]
(Background on this error at: https://sqlalche.me/e/14/f405)

Stack Trace:
  File "/Users/fabio/miniforge3/envs/dagsterETL/lib/python3.9/site-packages/dagster/_core/execution/plan/utils.py", line 47, in solid_execution_error_boundary
    yield
  File "/Users/fabio/miniforge3/envs/dagsterETL/lib/python3.9/site-packages/dagster/_utils/__init__.py", line 447, in iterate_with_context
    next_output = next(iterator)
  File "/Users/fabio/miniforge3/envs/dagsterETL/lib/python3.9/site-packages/dagster/_core/execution/plan/compute_generator.py", line 74, in _coerce_solid_compute_fn_to_iterator
    result = fn(context, **kwargs) if context_arg_provided else fn(**kwargs)
  File "/Users/fabio/Documents/dagster_home/etldagster/etldagster/ops/etl.py", line 23, in load_table
    df.to_sql('matrizinfo', conn, if_exists='append', index=False)
  File "/Users/fabio/miniforge3/envs/dagsterETL/lib/python3.9/site-packages/pandas/core/generic.py", line 2987, in to_sql
    return sql.to_sql(
  File "/Users/fabio/miniforge3/envs/dagsterETL/lib/python3.9/site-packages/pandas/io/sql.py", line 695, in to_sql
    return pandas_sql.to_sql(
  File "/Users/fabio/miniforge3/envs/dagsterETL/lib/python3.9/site-packages/pandas/io/sql.py", line 1738, in to_sql
    total_inserted = sql_engine.insert_records(
  File "/Users/fabio/miniforge3/envs/dagsterETL/lib/python3.9/site-packages/pandas/io/sql.py", line 1335, in insert_records
    raise err
  File "/Users/fabio/miniforge3/envs/dagsterETL/lib/python3.9/site-packages/pandas/io/sql.py", line 1325, in insert_records
    return table.insert(chunksize=chunksize, method=method)
  File "/Users/fabio/miniforge3/envs/dagsterETL/lib/python3.9/site-packages/pandas/io/sql.py", line 946, in insert
    num_inserted = exec_insert(conn, keys, chunk_iter)
  File "/Users/fabio/miniforge3/envs/dagsterETL/lib/python3.9/site-packages/pandas/io/sql.py", line 853, in _execute_insert
    result = conn.execute(self.table.insert(), data)
  File "/Users/fabio/miniforge3/envs/dagsterETL/lib/python3.9/site-packages/sqlalchemy/engine/base.py", line 1380, in execute
    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)
  File "/Users/fabio/miniforge3/envs/dagsterETL/lib/python3.9/site-packages/sqlalchemy/sql/elements.py", line 334, in _execute_on_connection
    return connection._execute_clauseelement(
  File "/Users/fabio/miniforge3/envs/dagsterETL/lib/python3.9/site-packages/sqlalchemy/engine/base.py", line 1572, in _execute_clauseelement
    ret = self._execute_context(
  File "/Users/fabio/miniforge3/envs/dagsterETL/lib/python3.9/site-packages/sqlalchemy/engine/base.py", line 1943, in _execute_context
    self._handle_dbapi_exception(
  File "/Users/fabio/miniforge3/envs/dagsterETL/lib/python3.9/site-packages/sqlalchemy/engine/base.py", line 2124, in _handle_dbapi_exception
    util.raise_(
  File "/Users/fabio/miniforge3/envs/dagsterETL/lib/python3.9/site-packages/sqlalchemy/util/compat.py", line 210, in raise_
    raise exception
  File "/Users/fabio/miniforge3/envs/dagsterETL/lib/python3.9/site-packages/sqlalchemy/engine/base.py", line 1880, in _execute_context
    self.dialect.do_executemany(
  File "/Users/fabio/miniforge3/envs/dagsterETL/lib/python3.9/site-packages/sqlalchemy/dialects/postgresql/psycopg2.py", line 982, in do_executemany
    context._psycopg2_fetched_rows = xtras.execute_values(
  File "/Users/fabio/miniforge3/envs/dagsterETL/lib/python3.9/site-packages/psycopg2/extras.py", line 1270, in execute_values
    cur.execute(b''.join(parts))

The above exception was caused by the following exception:
psycopg2.errors.UndefinedColumn: column "Row" of relation "matrizinfo" does not exist
LINE 1: INSERT INTO matrizinfo ("Row", "Col", val) VALUES ('A', 'A',...
                                ^


Stack Trace:
  File "/Users/fabio/miniforge3/envs/dagsterETL/lib/python3.9/site-packages/sqlalchemy/engine/base.py", line 1880, in _execute_context
    self.dialect.do_executemany(
  File "/Users/fabio/miniforge3/envs/dagsterETL/lib/python3.9/site-packages/sqlalchemy/dialects/postgresql/psycopg2.py", line 982, in do_executemany
    context._psycopg2_fetched_rows = xtras.execute_values(
  File "/Users/fabio/miniforge3/envs/dagsterETL/lib/python3.9/site-packages/psycopg2/extras.py", line 1270, in execute_values
    cur.execute(b''.join(parts))
[0m
